[
    {
        "name": "Activity",
        "documentation": [],
        "members": {
            "join": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "flags": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "applicationId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "spectate": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "url": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "startedAt": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "endedAt": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "details": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "state": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "emoji": {
                "type": "ActivityEmoji",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "partyId": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "partyCurrentSize": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "partyMaxSize": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "largeImage": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "largeText": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "smallImage": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "smallText": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "match": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "instance": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "buttons": {
                "type": "ActivityButton[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "type": {
                "type": "ActivityTypes",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "createdAt": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ActivityEmoji",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "animated": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ActivityButton",
        "documentation": [],
        "members": {
            "url": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "label": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Application",
        "documentation": [],
        "members": {
            "flags": {
                "type": "ApplicationFlags",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "icon": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "rpcOrigins": {
                "type": "string[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "termsOfServiceUrl": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "privacyPolicyUrl": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "primarySkuId": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "slug": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "coverImage": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "owner": {
                "type": "User",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "team": {
                "type": "Team",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "guild": {
                "type": "Guild",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "botPublic": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "botRequireCodeGrant": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "verifyKey": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "approximateGuildCount": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "bot": {
                "type": "User",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "redirectUris": {
                "type": "string[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "interactionsEndpointUrl": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "integrationTypesConfig": {
                "type": "Partial<Record<DiscordApplicationIntegrationType, ApplicationIntegrationTypeConfiguration>>",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ApplicationIntegrationTypeConfiguration",
        "documentation": [],
        "members": {
            "oauth2InstallParams": {
                "type": "ApplicationInstallParams",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Install params for each installation context's default in-app authorization link",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ApplicationInstallParams",
        "documentation": [],
        "members": {
            "scopes": {
                "type": "OAuth2Scope[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Scopes to add the application to the server with",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "permissions": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Permissions to request for the bot role",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ApplicationCommand",
        "documentation": [],
        "members": {
            "options": {
                "type": "ApplicationCommandOption[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "nameLocalizations": {
                "type": "Record<Locales, string>",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "descriptionLocalizations": {
                "type": "Record<Locales, string>",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "defaultMemberPermissions": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "type": {
                "type": "ApplicationCommandTypes",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "version": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "applicationId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "dmPermission": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ApplicationCommandOption",
        "documentation": [],
        "members": {
            "type": {
                "type": "ApplicationCommandOptionTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Value of Application Command Option Type",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "1-32 character name matching lowercase `^[\\w-]{1,32}$`",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "nameLocalizations": {
                "type": "Partial<Record<Locales, string>>",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Localization object for the `name` field. Values follow the same restrictions as `name`",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "1-100 character description",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "descriptionLocalizations": {
                "type": "Partial<Record<Locales, string>>",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Localization object for the `description` field. Values follow the same restrictions as `description`",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "required": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "If the parameter is required or optional--default `false`",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "choices": {
                "type": "ApplicationCommandOptionChoice[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Choices for `string` and `int` types for the user to pick from",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "options": {
                "type": "ApplicationCommandOption[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "If the option is a subcommand or subcommand group type, this nested options will be the parameters",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channelTypes": {
                "type": "ChannelTypes[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "If the option is a channel type, the channels shown will be restricted to these types",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "minValue": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Minimum number desired.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "maxValue": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Maximum number desired.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "minLength": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Minimum length desired.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "maxLength": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Maximum length desired.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "autocomplete": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "if autocomplete interactions are enabled for this `String`, `Integer`, or `Number` type option",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ApplicationCommandOptionChoice",
        "documentation": [],
        "members": {
            "nameLocalizations": {
                "type": "Record<Locales, string>",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "value": {
                "type": "string | number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ApplicationCommandPermission",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "applicationId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "permissions": {
                "type": "ApplicationCommandPermissionChange[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ApplicationCommandPermissionChange",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "type": {
                "type": "ApplicationCommandPermissionTypes",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "permission": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Attachment",
        "documentation": [],
        "members": {
            "filename": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Name of file attached",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "title": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The title of the file",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "contentType": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The attachment's [media type](https://en.wikipedia.org/wiki/Media_type)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "size": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Size of file in bytes",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "url": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Source url of file",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "proxyUrl": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "A proxied url of file",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Attachment id",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "description for the file (max 1024 characters)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "height": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Height of file (if image)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "width": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Width of file (if image)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "ephemeral": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "whether this attachment is ephemeral.\nEphemeral attachments will automatically be removed after a set period of time.\nEphemeral attachments on messages are guaranteed to be available as long as the message itself exists.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "duration_secs": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The duration of the audio file for a voice message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "waveform": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "A base64 encoded bytearray representing a sampled waveform for a voice message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "flags": {
                "type": "AttachmentFlags",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Attachment flags combined as a bitfield",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "AuditLogEntry",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "userId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "reason": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "changes": {
                "type": "AuditLogChange[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "targetId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "actionType": {
                "type": "AuditLogEvents",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "options": {
                "type": "OptionalAuditEntryInfo",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "AuditLogChange",
        "documentation": [],
        "members": {
            "new": {
                "type": "string | number | bigint | boolean | { allow?: string; deny?: string; id: string; type: OverwriteTypes; }[] | { id?: bigint; name?: string; }[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "old": {
                "type": "string | number | bigint | boolean | { allow?: string; deny?: string; id: string; type: OverwriteTypes; }[] | { id?: bigint; name?: string; }[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "key": {
                "type": "\"id\" | \"name\" | \"description\" | \"type\" | \"permissions\" | \"locked\" | \"invitable\" | \"nsfw\" | \"archived\" | \"position\" | \"topic\" | \"bitrate\" | \"default_auto_archive_duration\" | \"auto_archive_duration\" | \"allow\" | \"deny\" | \"channel_id\" | \"deaf\" | \"mute\" | \"status\" | \"nick\" | \"communication_disabled_until\" | \"color\" | \"permission_overwrites\" | \"user_limit\" | \"rate_limit_per_user\" | \"owner_id\" | \"application_id\" | \"hoist\" | \"mentionable\" | \"location\" | \"verification_level\" | \"default_message_notifications\" | \"explicit_content_filter\" | \"preferred_locale\" | \"afk_timeout\" | \"afk_channel_id\" | \"system_channel_id\" | \"widget_enabled\" | \"mfa_level\" | \"vanity_url_code\" | \"icon_hash\" | \"widget_channel_id\" | \"rules_channel_id\" | \"public_updates_channel_id\" | \"code\" | \"region\" | \"privacy_level\" | \"entity_type\" | \"enable_emoticons\" | \"expire_behavior\" | \"expire_grace_period\" | \"uses\" | \"max_uses\" | \"max_age\" | \"temporary\" | \"discovery_splash_hash\" | \"banner_hash\" | \"image_hash\" | \"splash_hash\" | \"inviter_id\" | \"avatar_hash\" | \"command_id\" | \"prune_delete_days\" | \"$add\" | \"$remove\"",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "OptionalAuditEntryInfo",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "channelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "messageId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "type": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "count": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "deleteMemberDays": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "membersRemoved": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "roleName": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "autoModerationRuleName": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "autoModerationRuleTriggerType": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "integrationType": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "AutoModerationActionExecution",
        "documentation": [],
        "members": {
            "channelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "messageId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "alertSystemMessageId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "userId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "content": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "action": {
                "type": "AutoModerationAction",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "ruleTriggerType": {
                "type": "AutoModerationTriggerTypes",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "ruleId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "matchedKeyword": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "matchedContent": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "AutoModerationAction",
        "documentation": [],
        "members": {
            "type": {
                "type": "AutoModerationActionType",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "metadata": {
                "type": "AutoModerationActionMetadata",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "AutoModerationActionMetadata",
        "documentation": [],
        "members": {
            "customMessage": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "durationSeconds": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "channelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "AutoModerationRule",
        "documentation": [],
        "members": {
            "triggerMetadata": {
                "type": "AutoModerationRuleTriggerMetadata",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "eventType": {
                "type": "AutoModerationEventTypes",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "triggerType": {
                "type": "AutoModerationTriggerTypes",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "enabled": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "creatorId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "exemptRoles": {
                "type": "bigint[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "exemptChannels": {
                "type": "bigint[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "actions": {
                "type": "AutoModerationAction[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "AutoModerationRuleTriggerMetadata",
        "documentation": [],
        "members": {
            "keywordFilter": {
                "type": "string[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "presets": {
                "type": "DiscordAutoModerationRuleTriggerMetadataPresets[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "allowList": {
                "type": "string[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "mentionTotalLimit": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "regexPatterns": {
                "type": "string[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "AvatarDecorationData",
        "documentation": [],
        "members": {
            "asset": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "the avatar decoration hash",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "skuId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "id of the avatar decoration's SKU",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Channel",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The id of the channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "toggles": {
                "type": "ChannelToggles",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The compressed form of all the boolean values on this channel.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "type": {
                "type": "ChannelTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The type of channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The id of the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "position": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Sorting position of the channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The name of the channel (1-100 characters)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "topic": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The channel topic (0-4096 characters for GUILD_FORUM channels, 0-1024 characters for all others)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "lastMessageId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The id of the last message sent in this channel (may not point to an existing or valid message)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "bitrate": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The bitrate (in bits) of the voice or stage channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "userLimit": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The user limit of the voice or stage channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "rateLimitPerUser": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Amount of seconds a user has to wait before sending another message (0-21600); bots, as well as users with the permission `manage_messages` or `manage_channel`, are unaffected",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "ownerId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Id of the creator of the thread",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "parentId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "For guild channels: Id of the parent category for a channel (each parent category can contain up to 50 channels), for threads: id of the text channel this thread was created",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "lastPinTimestamp": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "When the last pinned message was pinned. This may be null in events such as GUILD_CREATE when a message is not pinned.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "rtcRegion": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Voice region id for the voice or stage channel, automatic when set to null",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "videoQualityMode": {
                "type": "VideoQualityModes",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The camera video quality mode of the voice channel, 1 when not present",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "messageCount": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "An approximate count of messages in a thread, stops counting at 50",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "memberCount": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "An approximate count of users in a thread, stops counting at 50",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "internalThreadMetadata": {
                "type": "{ archiveTimestamp: number; createTimestamp?: number; autoArchiveDuration: 60 | 1440 | 4320 | 10080; }",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Thread-specific fields not needed by other channels.",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "deprecated",
                        "text": [
                            {
                                "text": "Use channel.threadMetadata",
                                "kind": "text"
                            }
                        ]
                    },
                    {
                        "name": "private",
                        "text": [
                            {
                                "text": "This field is an internal field, subject to breaking changes.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "member": {
                "type": "DiscordThreadMember",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Thread member object for the current user, if they have joined the thread, only included on certain API endpoints",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "autoArchiveDuration": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Default duration for newly created threads, in minutes, to automatically archive the thread after recent activity, can be set to: 60, 1440, 4320, 10080",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "permissions": {
                "type": "Permissions",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "computed permissions for the invoking user in the channel, including overwrites, only included when part of the resolved data received on a slash command interaction. This does not include implicit permissions, which may need to be checked separately.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "flags": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The flags of the channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "internalOverwrites": {
                "type": "bigint[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Explicit permission overwrites for members and roles",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "deprecated",
                        "text": [
                            {
                                "text": "Use channel.permissionOverwrites",
                                "kind": "text"
                            }
                        ]
                    },
                    {
                        "name": "private",
                        "text": [
                            {
                                "text": "This is for internal use only, and prone to breaking changes.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "nsfw": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the channel is nsfw",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "threadMetadata": {
                "type": "ChannelThreadMetadata",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Thread-specific fields not needed by other channels",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "newlyCreated": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "locked": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "When a thread is locked, only users with `MANAGE_THREADS` can unarchive it",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "invitable": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "whether non-moderators can add other non-moderators to a thread; only available on private threads",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "archived": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the thread is archived",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "permissionOverwrites": {
                "type": "OverwriteReadable[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Explicit permission overwrites for members and roles.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ChannelThreadMetadata",
        "documentation": [],
        "members": {
            "archiveTimestamp": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Timestamp when the thread's archive status was last changed, used for calculating recent activity",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "createTimestamp": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Timestamp when the thread was created; only populated for threads created after 2022-01-09",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "autoArchiveDuration": {
                "type": "60 | 1440 | 4320 | 10080",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Duration in minutes to automatically archive the thread after recent activity",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "locked": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "When a thread is locked, only users with `MANAGE_THREADS` can unarchive it",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "invitable": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "whether non-moderators can add other non-moderators to a thread; only available on private threads",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "archived": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the thread is archived",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Component",
        "documentation": [],
        "members": {
            "type": {
                "type": "MessageComponentTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "component type",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "customId": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "a developer-defined identifier for the component, max 100 characters",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "required": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "whether this component is required to be filled, default true",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "disabled": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "whether the component is disabled, default false",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "style": {
                "type": "ButtonStyles | TextStyles",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "For different styles/colors of the buttons",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "label": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "text that appears on the button (max 80 characters)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "value": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the dev-define value of the option, max 100 characters for select or 4000 for input.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "emoji": {
                "type": "Pick<Partial<Emoji>, \"id\" | \"name\" | \"animated\">",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Emoji object that includes fields of name, id, and animated supporting unicode and custom emojis.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "url": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "optional url for link-style buttons that can navigate a user to the web. Only type 5 Link buttons can have a url",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channelTypes": {
                "type": "ChannelTypes[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "List of channel types to include in a channel select menu options list",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "options": {
                "type": "SelectOption[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The choices! Maximum of 25 items.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "placeholder": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "A custom placeholder text if nothing is selected. Maximum 150 characters.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "minValues": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The minimum number of items that must be selected. Default 1. Between 1-25.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "maxValues": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The maximum number of items that can be selected. Default 1. Between 1-25.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "minLength": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The minimum input length for a text input. Between 0-4000.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "maxLength": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The maximum input length for a text input. Between 1-4000.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "components": {
                "type": "Component[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "a list of child components",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Embed",
        "documentation": [],
        "members": {
            "description": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "type": {
                "type": "EmbedTypes",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "url": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "image": {
                "type": "EmbedImage",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "video": {
                "type": "EmbedVideo",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "title": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "timestamp": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "color": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "footer": {
                "type": "EmbedFooter",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "thumbnail": {
                "type": "EmbedThumbnail",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "provider": {
                "type": "EmbedProvider",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "author": {
                "type": "EmbedAuthor",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "fields": {
                "type": "EmbedField[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "EmbedImage",
        "documentation": [],
        "members": {
            "proxyUrl": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "height": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "width": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "url": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "EmbedVideo",
        "documentation": [],
        "members": {
            "url": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "proxyUrl": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "height": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "width": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "EmbedFooter",
        "documentation": [],
        "members": {
            "iconUrl": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "proxyIconUrl": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "text": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "EmbedThumbnail",
        "documentation": [],
        "members": {
            "proxyUrl": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "height": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "width": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "url": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "EmbedProvider",
        "documentation": [],
        "members": {
            "name": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "url": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "EmbedAuthor",
        "documentation": [],
        "members": {
            "url": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "iconUrl": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "proxyIconUrl": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "EmbedField",
        "documentation": [],
        "members": {
            "inline": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "value": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Emoji",
        "documentation": [],
        "members": {
            "name": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Emoji name (can only be null in reaction emoji objects)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Emoji id",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "roles": {
                "type": "bigint[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Roles allowed to use this emoji",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "user": {
                "type": "User",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "User that created this emoji",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "requireColons": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether this emoji must be wrapped in colons",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "managed": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether this emoji is managed",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "animated": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether this emoji is animated",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "available": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether this emoji can be used, may be false due to loss of Server Boosts",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "toggles": {
                "type": "EmojiToggles",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Entitlement",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "ID of the entitlement",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "skuId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "ID of the SKU",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "userId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "ID of the user that is granted access to the entitlement's sku",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "ID of the guild that is granted access to the entitlement's sku",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "applicationId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "ID of the parent application",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "type": {
                "type": "DiscordEntitlementType",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Type of entitlement",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "deleted": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Entitlement was deleted",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "startsAt": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Start date at which the entitlement is valid. Not present when using test entitlements",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "endsAt": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Date at which the entitlement is no longer valid. Not present when using test entitlements",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "consumed": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "For consumable items, whether or not the entitlement has been consumed",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "GetGatewayBot",
        "documentation": [],
        "members": {
            "url": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "shards": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "sessionStartLimit": {
                "type": "SessionStartLimit",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "SessionStartLimit",
        "documentation": [],
        "members": {
            "total": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "remaining": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "resetAfter": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "maxConcurrency": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Guild",
        "documentation": [],
        "members": {
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Guild name (2-100 characters, excluding trailing and leading whitespace)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "owner": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "True if the user is the owner of the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "afkTimeout": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Afk timeout in seconds",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "widgetEnabled": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "True if the server widget is enabled",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "verificationLevel": {
                "type": "VerificationLevels",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Verification level required for the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "defaultMessageNotifications": {
                "type": "DefaultMessageNotificationLevels",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Default message notifications level",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "explicitContentFilter": {
                "type": "ExplicitContentFilterLevels",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Explicit content filter level",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "features": {
                "type": "GuildFeatures[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Enabled guild features",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "mfaLevel": {
                "type": "MfaLevels",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Required MFA level for the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "systemChannelFlags": {
                "type": "SystemChannelFlags",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "System channel flags",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "large": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "True if this is considered a large guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "unavailable": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "True if this guild is unavailable due to an outage",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "memberCount": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Total number of members in this guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "maxPresences": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The maximum number of presences for the guild (the default value, currently 25000, is in effect when null is returned)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "maxMembers": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The maximum number of members for the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "vanityUrlCode": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The vanity url code for the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The description of a guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "toggles": {
                "type": "GuildToggles",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "shardId": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "premiumTier": {
                "type": "PremiumTiers",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Premium tier (Server Boost level)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "premiumSubscriptionCount": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The number of boosts this guild currently has",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "maxVideoChannelUsers": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The maximum amount of users in a video channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "maxStageVideoChannelUsers": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Maximum amount of users in a stage video channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "approximateMemberCount": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Approximate number of members in this guild, returned from the GET /guilds/id endpoint when with_counts is true",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "approximatePresenceCount": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Approximate number of non-offline members in this guild, returned from the GET /guilds/id endpoint when with_counts is true",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "nsfwLevel": {
                "type": "GuildNsfwLevel",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Guild NSFW level",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "premiumProgressBarEnabled": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the guild has the boost progress bar enabled",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Guild id",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "icon": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Icon hash",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "iconHash": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Icon hash, returned when in the template object",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "splash": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Splash hash",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "discoverySplash": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Discovery splash hash; only present for guilds with the \"DISCOVERABLE\" feature",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "ownerId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Id of the owner",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "permissions": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Total permissions for the user in the guild (excludes overwrites and implicit permissions)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "afkChannelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Id of afk channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "widgetChannelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The channel id that the widget will generate an invite to, or null if set to no invite",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "roles": {
                "type": "Collection<bigint, Role>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Roles in the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "emojis": {
                "type": "Collection<bigint, Emoji>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Custom guild emojis",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "applicationId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Application id of the guild creator if it is bot-created",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "systemChannelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The id of the channel where guild notices such as welcome messages and boost events are posted",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "rulesChannelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The id of the channel where community guilds can display rules and/or guidelines",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "joinedAt": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "When this guild was joined at",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "voiceStates": {
                "type": "Collection<bigint, VoiceState>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "States of members currently in voice channels; lacks the guild_id key",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "members": {
                "type": "Collection<bigint, Member>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Users in the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channels": {
                "type": "Collection<bigint, Channel>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Channels in the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "threads": {
                "type": "Collection<bigint, Channel>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "All active threads in the guild that the current user has permission to view",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "presences": {
                "type": "PresenceUpdate[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Presences of the members in the guild, will only include non-offline members if the size is greater than large threshold",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "banner": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Banner hash",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "preferredLocale": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The preferred locale of a Community guild; used in server discovery and notices from Discord; defaults to \"en-US\"",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "publicUpdatesChannelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The id of the channel where admins and moderators of Community guilds receive notices from Discord",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "welcomeScreen": {
                "type": "WelcomeScreen",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The welcome screen of a Community guild, shown to new members, returned in an Invite's guild object",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "stageInstances": {
                "type": "StageInstance[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Stage instances in the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "stickers": {
                "type": "Collection<bigint, Sticker>",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Custom guild stickers",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "safetyAlertsChannelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The id of the channel where admins and moderators of Community guilds receive safety alerts from Discord",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Integration",
        "documentation": [],
        "members": {
            "user": {
                "type": "User",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "enabled": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "syncing": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "roleId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "enableEmoticons": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "expireBehavior": {
                "type": "IntegrationExpireBehaviors",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "expireGracePeriod": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "syncedAt": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "subscriberCount": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "revoked": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "application": {
                "type": "IntegrationApplication",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "type": {
                "type": "\"twitch\" | \"youtube\" | \"discord\"",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "account": {
                "type": "IntegrationAccount",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "scopes": {
                "type": "OAuth2Scope[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "IntegrationApplication",
        "documentation": [],
        "members": {
            "bot": {
                "type": "User",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "icon": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "IntegrationAccount",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Interaction",
        "documentation": [],
        "members": {
            "bot": {
                "type": "Bot",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The bot object",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "acknowledged": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether or not this interaction has been responded to.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Id of the interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "applicationId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Id of the application this interaction is for",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "type": {
                "type": "InteractionTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The type of interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The guild it was sent from",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channel": {
                "type": "Partial<Channel>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The channel it was sent from",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The ID of channel it was sent from",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "It is recommended that you begin using this channel field to identify the source channel of the interaction as they may deprecate the existing channel_id field in the future.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "member": {
                "type": "Member",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Guild member data for the invoking user, including permissions",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "user": {
                "type": "User",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "User object for the invoking user, if invoked in a DM",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "token": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "A continuation token for responding to the interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "version": {
                "type": "1",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Read-only property, always `1`",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "message": {
                "type": "Message",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "For the message the button was attached to",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "data": {
                "type": "InteractionData",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the command data payload",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "locale": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "guildLocale": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The guild's preferred locale, if invoked in a guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "appPermissions": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The computed permissions for a bot or app in the context of a specific interaction (including channel overwrites)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "authorizingIntegrationOwners": {
                "type": "Partial<Record<DiscordApplicationIntegrationType, bigint>>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Mapping of installation contexts that the interaction was authorized for to related user or guild IDs.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "context": {
                "type": "DiscordInteractionContextType",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Context where the interaction was triggered from",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "respond": {
                "type": "(response: string | InteractionCallbackData, options?: { isPrivate?: boolean; }) => Promise<void | Message>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Sends a response to an interaction.",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "This will send a ",
                                "kind": "text"
                            },
                            {
                                "text": "{@link ",
                                "kind": "link"
                            },
                            {
                                "text": "InteractionResponseTypes.ChannelMessageWithSource ",
                                "kind": "linkText"
                            },
                            {
                                "text": "}",
                                "kind": "link"
                            },
                            {
                                "text": ", ",
                                "kind": "text"
                            },
                            {
                                "text": "{@link ",
                                "kind": "link"
                            },
                            {
                                "text": "InteractionResponseTypes.ApplicationCommandAutocompleteResult ",
                                "kind": "linkText"
                            },
                            {
                                "text": "}",
                                "kind": "link"
                            },
                            {
                                "text": " or ",
                                "kind": "text"
                            },
                            {
                                "text": "{@link ",
                                "kind": "link"
                            },
                            {
                                "text": "InteractionResponseTypes.Modal ",
                                "kind": "linkText"
                            },
                            {
                                "text": "}",
                                "kind": "link"
                            },
                            {
                                "text": " response based on the type of the interaction you are responding to.\n\nIf the interaction has been already acknowledged, indicated by ",
                                "kind": "text"
                            },
                            {
                                "text": "{@link ",
                                "kind": "link"
                            },
                            {
                                "text": "Interaction.acknowledged",
                                "kind": "linkName",
                                "target": {
                                    "fileName": "packages/bot/src/transformers/types.ts",
                                    "textSpan": {
                                        "start": 25533,
                                        "length": 21
                                    }
                                }
                            },
                            {
                                "text": "}",
                                "kind": "link"
                            },
                            {
                                "text": ", it will send a followup message instead.\n\nUses `interaction.type`, `interaction.token` and `interaction.id`, missing one of these in the desired proprieties may cause unexpected behavior.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "edit": {
                "type": "(response: string | InteractionCallbackData, messageId?: BigString) => Promise<void | Message>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Edit the original response of an interaction or a followup if the message id is provided.",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "This will edit the original interaction response or, if the interaction has not yet been acknowledged and the type of the interaction is ",
                                "kind": "text"
                            },
                            {
                                "text": "{@link ",
                                "kind": "link"
                            },
                            {
                                "text": "InteractionTypes.MessageComponent",
                                "kind": "linkName",
                                "target": {
                                    "fileName": "D:/code/discordeno/repo/packages/types/dist/types/shared.d.ts",
                                    "textSpan": {
                                        "start": 15338,
                                        "length": 20
                                    }
                                }
                            },
                            {
                                "text": "}",
                                "kind": "link"
                            },
                            {
                                "text": " it will instead send a ",
                                "kind": "text"
                            },
                            {
                                "text": "{@link ",
                                "kind": "link"
                            },
                            {
                                "text": "InteractionResponseTypes.UpdateMessage ",
                                "kind": "linkText"
                            },
                            {
                                "text": "}",
                                "kind": "link"
                            },
                            {
                                "text": " response instead.\n\nUses `interaction.type`, `interaction.token` and `interaction.id`, missing one of these in the desired proprieties may cause unexpected behavior.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "deferEdit": {
                "type": "() => Promise<void>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Defer the interaction for updating the referenced message at a later time with ",
                        "kind": "text"
                    },
                    {
                        "text": "{@link ",
                        "kind": "link"
                    },
                    {
                        "text": "edit",
                        "kind": "linkName",
                        "target": {
                            "fileName": "packages/bot/src/transformers/types.ts",
                            "textSpan": {
                                "start": 28424,
                                "length": 100
                            }
                        }
                    },
                    {
                        "text": "}",
                        "kind": "link"
                    },
                    {
                        "text": ".",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "This will send a ",
                                "kind": "text"
                            },
                            {
                                "text": "{@link ",
                                "kind": "link"
                            },
                            {
                                "text": "InteractionResponseTypes.DeferredUpdateMessage ",
                                "kind": "linkText"
                            },
                            {
                                "text": "}",
                                "kind": "link"
                            },
                            {
                                "text": " response.\n\nUses `interaction.type`, `interaction.token` and `interaction.id`, missing one of these in the desired proprieties may cause unexpected behavior.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "defer": {
                "type": "(isPrivate?: boolean) => Promise<void>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Defer the interaction for updating the response at a later time with ",
                        "kind": "text"
                    },
                    {
                        "text": "{@link ",
                        "kind": "link"
                    },
                    {
                        "text": "edit",
                        "kind": "linkName",
                        "target": {
                            "fileName": "packages/bot/src/transformers/types.ts",
                            "textSpan": {
                                "start": 28424,
                                "length": 100
                            }
                        }
                    },
                    {
                        "text": "}",
                        "kind": "link"
                    },
                    {
                        "text": ".",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "This will send a ",
                                "kind": "text"
                            },
                            {
                                "text": "{@link ",
                                "kind": "link"
                            },
                            {
                                "text": "InteractionResponseTypes.DeferredChannelMessageWithSource ",
                                "kind": "linkText"
                            },
                            {
                                "text": "}",
                                "kind": "link"
                            },
                            {
                                "text": " response.\n\nUses `interaction.type`, `interaction.token` and `interaction.id`, missing one of these in the desired proprieties may cause unexpected behavior.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "delete": {
                "type": "(messageId?: BigString) => Promise<void>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Delete the original interaction response or a followup if the message id is provided.",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "Uses `interaction.type` and `interaction.token`, missing one of these in the desired proprieties may cause unexpected behavior.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            }
        }
    },
    {
        "name": "InteractionData",
        "documentation": [],
        "members": {
            "type": {
                "type": "ApplicationCommandTypes",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "componentType": {
                "type": "MessageComponentTypes",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "customId": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "components": {
                "type": "Component[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "values": {
                "type": "string[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "resolved": {
                "type": "InteractionDataResolved",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "options": {
                "type": "InteractionDataOption[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "targetId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "InteractionDataResolved",
        "documentation": [],
        "members": {
            "messages": {
                "type": "Collection<bigint, Message>",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "users": {
                "type": "Collection<bigint, User>",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "members": {
                "type": "Collection<bigint, Member>",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "roles": {
                "type": "Collection<bigint, Role>",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "channels": {
                "type": "Collection<bigint, { id: bigint; name: string; type: ChannelTypes; permissions: bigint; }>",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "attachments": {
                "type": "Collection<bigint, Attachment>",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "InteractionDataOption",
        "documentation": [],
        "members": {
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "type": {
                "type": "ApplicationCommandOptionTypes",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "value": {
                "type": "string | number | boolean",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "options": {
                "type": "InteractionDataOption[]",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "focused": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Invite",
        "documentation": [],
        "members": {
            "type": {
                "type": "DiscordInviteType",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The type of invite",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channelId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The channel the invite is for",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "code": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The unique invite code",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "createdAt": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The time at which the invite was created",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The guild of the invite",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "inviter": {
                "type": "User",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The user that created the invite",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "maxAge": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "How long the invite is valid for (in seconds)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "maxUses": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The maximum number of times the invite can be used",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "targetType": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The type of target for this voice channel invite",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "targetUser": {
                "type": "User",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The target user for this invite",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "targetApplication": {
                "type": "Application",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The embedded application to open for this voice channel embedded application invite",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "temporary": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether or not the invite is temporary (invited users will be kicked on disconnect unless they're assigned a role)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "uses": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "How many times the invite has been used (always will be 0)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "approximateMemberCount": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Approximate count of online members (only present when target_user is set)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "stageInstance": {
                "type": "InviteStageInstance",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Stage instance data if there is a public Stage instance in the Stage channel this invite is for",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "expiresAt": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The expiration date of this invite, returned from the GET /invites/code endpoint when with_expiration is true",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildScheduledEvent": {
                "type": "ScheduledEvent",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "guild scheduled event data",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "approximatePresenceCount": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Approximate count of online members (only present when target_user is set)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Member",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The user id of the member.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "toggles": {
                "type": "MemberToggles",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The compressed form of all the boolean values on this user.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The guild id where this member is.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "user": {
                "type": "User",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The user this guild member represents",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "nick": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "This users guild nickname",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "avatar": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The members custom avatar for this server.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "roles": {
                "type": "bigint[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Array of role object ids",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "joinedAt": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "When the user joined the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "premiumSince": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "When the user started boosting the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "permissions": {
                "type": "Permissions",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The permissions this member has in the guild. Only present on interaction events.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "communicationDisabledUntil": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "when the user's timeout will expire and the user will be able to communicate in the guild again (set null to remove timeout), null or a time in the past if the user is not timed out",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "avatarDecorationData": {
                "type": "AvatarDecorationData",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "data for the member's guild avatar decoration",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "deaf": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether the user is deafened in voice channels",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "mute": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether the user is muted in voice channels",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "pending": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether the user has not yet passed the guild's Membership Screening requirements",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Message",
        "documentation": [],
        "members": {
            "activity": {
                "type": "MessageActivity",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Sent with Rich Presence-related chat embeds",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "applicationId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "attachments": {
                "type": "Attachment[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Any attached files on this message.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "author": {
                "type": "User",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The author of this message (not guaranteed to be a valid user) Note: The author object follows the structure of the user object, but is only a valid user in the case where the message is generated by a user or bot user. If the message is generated by a webhook, the author object corresponds to the webhook's id, username, and avatar. You can tell if a message is generated by a webhook by checking for the webhook_id on the message object.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channelId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "id of the channel the message was sent in",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "components": {
                "type": "Component[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The components related to this message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "content": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Contents of the message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "editedTimestamp": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The timestamp in milliseconds when this message was edited last.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "embeds": {
                "type": "Embed[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Any embedded content",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "id of the guild the message was sent in Note: For MESSAGE_CREATE and MESSAGE_UPDATE events, the message object may not contain a guild_id or member field since the events are sent directly to the receiving user and the bot who sent the message, rather than being sent through the guild like non-ephemeral messages.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "id of the message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "interactionMetadata": {
                "type": "MessageInteractionMetadata",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "sent if the message is sent as a result of an interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "interaction": {
                "type": "MessageInteraction",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Sent if the message is a response to an Interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "deprecated",
                        "text": [
                            {
                                "text": "Deprecated in favor of ",
                                "kind": "text"
                            },
                            {
                                "text": "{@link ",
                                "kind": "link"
                            },
                            {
                                "text": "interactionMetadata",
                                "kind": "linkName",
                                "target": {
                                    "fileName": "packages/bot/src/transformers/types.ts",
                                    "textSpan": {
                                        "start": 34879,
                                        "length": 48
                                    }
                                }
                            },
                            {
                                "text": "}",
                                "kind": "link"
                            }
                        ]
                    }
                ]
            },
            "member": {
                "type": "Member",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "mentions": {
                "type": "User[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Users specifically mentioned in the message Note: The user objects in the mentions array will only have the partial member field present in MESSAGE_CREATE and MESSAGE_UPDATE events from text-based guild channels.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "mentionedChannelIds": {
                "type": "bigint[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Channels specifically mentioned in this message Note: Not all channel mentions in a message will appear in mention_channels. Only textual channels that are visible to everyone in a discoverable guild will ever be included. Only crossposted messages (via Channel Following) currently include mention_channels at all. If no mentions in the message meet these requirements, this field will not be sent.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "mentionedRoleIds": {
                "type": "bigint[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Roles specifically mentioned in this message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "messageReference": {
                "type": "MessageReference",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Data showing the source of a crossposted channel follow add, pin or reply message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "nonce": {
                "type": "string | number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "reactions": {
                "type": "Reaction[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Reactions on this message.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "stickerItems": {
                "type": "Pick<Sticker, \"id\" | \"name\" | \"formatType\">[]",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Sent if the message contains stickers",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "type": {
                "type": "MessageTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Type of message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "thread": {
                "type": "Channel",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The thread that was started from this message, includes thread member object",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "webhookId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "If the message is generated by a webhook, this is the webhook's id",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "poll": {
                "type": "Poll",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "A poll!",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "call": {
                "type": "MessageCall",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The call associated with the message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "bitfield": {
                "type": "ToggleBitfield",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Holds all the boolean values on this message.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "crossposted": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this message has been published to subscribed channels (via Channel Following)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "ephemeral": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this message is only visible to the user who invoked the Interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "failedToMentionSomeRolesInThread": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this message failed to mention some roles and add their members to the thread",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "flags": {
                "type": "ToggleBitfield",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Message flags combined as a bitfield",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "hasThread": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this message has an associated thread, with the same id as the message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "isCrosspost": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this message originated from a message in another channel (via Channel Following)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "loading": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this message is an Interaction Response and the bot is \"thinking\"",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "mentionedUserIds": {
                "type": "bigint[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The ids of the users who were mentioned in this message.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "mentionEveryone": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this message mentions everyone",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "pinned": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this message is pinned",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "sourceMessageDeleted": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the source message for this crosspost has been deleted (via Channel Following)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "suppressEmbeds": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether do not include any embeds when serializing this message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "suppressNotifications": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this message will not trigger push and desktop notifications",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "timestamp": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The timestamp in milliseconds when this message was created",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "tts": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this was a TTS message.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "urgent": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this message came from the urgent message system",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "MessageActivity",
        "documentation": [],
        "members": {
            "type": {
                "type": "MessageActivityTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Type of message activity",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "partyId": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "party_id from a Rich Presence event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "MessageInteraction",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Id of the interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "member": {
                "type": "Member",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The member who invoked the interaction in the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The name of the ApplicationCommand including the name of the subcommand/subcommand group",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "type": {
                "type": "InteractionTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The type of interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "user": {
                "type": "User",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The user who invoked the interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "MessageReference",
        "documentation": [],
        "members": {
            "channelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "id of the originating message's channel Note: channel_id is optional when creating a reply, but will always be present when receiving an event/response that includes this data model.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "id of the originating message's guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "messageId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "id of the originating message",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "MessageInteractionMetadata",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Id of the interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "type": {
                "type": "InteractionTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The type of interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "user": {
                "type": "User",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "User who triggered the interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "authorizingIntegrationOwners": {
                "type": "Partial<Record<DiscordApplicationIntegrationType, bigint>>",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "IDs for installation context(s) related to an interaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "originalResponseMessageId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "ID of the original response message, present only on follow-up messages",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "interactedMessageId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "ID of the message that contained interactive component, present only on messages created from component interactions",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "triggeringInteractionMetadata": {
                "type": "MessageInteractionMetadata",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Metadata for the interaction that was used to open the modal, present only on modal submit interactions",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "MessageCall",
        "documentation": [],
        "members": {
            "participants": {
                "type": "bigint[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Array of user object ids that participated in the call",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "endedTimestamp": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Time when call ended",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Reaction",
        "documentation": [],
        "members": {
            "me": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the current user reacted using this emoji",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "meBurst": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the current user super-reacted using this emoji",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "count": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Times this emoji has been used to react",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "countDetails": {
                "type": "ReactionCountDetails",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Reaction count details object",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "emoji": {
                "type": "Partial<Emoji>",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "burstColors": {
                "type": "string[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "HEX colors used for super reaction",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ReactionCountDetails",
        "documentation": [],
        "members": {
            "burst": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Count of super reactions",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "normal": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Count of normal reactions",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "GuildOnboarding",
        "documentation": [],
        "members": {
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "ID of the guild this onboarding is part of",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "prompts": {
                "type": "GuildOnboardingPrompt[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Prompts shown during onboarding and in customize community",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "defaultChannelIds": {
                "type": "bigint[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Channel IDs that members get opted into automatically",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "enabled": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether onboarding is enabled in the guild",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "mode": {
                "type": "DiscordGuildOnboardingMode",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Current mode of onboarding",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "GuildOnboardingPrompt",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "ID of the prompt",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "type": {
                "type": "DiscordGuildOnboardingPromptType",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Type of prompt",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "options": {
                "type": "GuildOnboardingPromptOption[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Options available within the prompt",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "title": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Title of the prompt",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "singleSelect": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Indicates whether users are limited to selecting one option for the prompt",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "required": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Indicates whether the prompt is required before a user completes the onboarding flow",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "inOnboarding": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Indicates whether the prompt is present in the onboarding flow. If `false`, the prompt will only appear in the Channels & Roles tab",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "GuildOnboardingPromptOption",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "ID of the prompt option",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channelIds": {
                "type": "bigint[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "IDs for channels a member is added to when the option is selected",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "roleIds": {
                "type": "bigint[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "IDs for roles assigned to a member when the option is selected",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "emoji": {
                "type": "Emoji",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Emoji of the option",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "title": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Title of the option",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Description of the option",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Poll",
        "documentation": [],
        "members": {
            "question": {
                "type": "PollMedia",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The question of the poll. Only `text` is supported.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "answers": {
                "type": "PollAnswer[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Each of the answers available in the poll. There is a maximum of 10 answers per poll.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "expiry": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The time when the poll ends.",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "`expiry` is marked as nullable to support non-expiring polls in the future, but all polls have an expiry currently.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "allowMultiselect": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether a user can select multiple answers",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "layoutType": {
                "type": "DiscordPollLayoutType",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The layout type of the poll",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "results": {
                "type": "PollResult",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The results of the poll",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "This value will not be sent by discord under specific conditions where they don't fetch them on their backend. When this value is missing it should be interpreted as \"Unknown results\" and not as \"No results\"\nThe results may not be totally accurate while the poll has not ended. When it ends discord will re-calculate all the results and set ",
                                "kind": "text"
                            },
                            {
                                "text": "{@link ",
                                "kind": "link"
                            },
                            {
                                "text": "DiscordPollResult.is_finalized ",
                                "kind": "linkText"
                            },
                            {
                                "text": "}",
                                "kind": "link"
                            },
                            {
                                "text": " to true",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            }
        }
    },
    {
        "name": "PollMedia",
        "documentation": [],
        "members": {
            "text": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The text of the field",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "`text` should always be non-null for both questions and answers, but this is subject to changes.\nThe maximum length of `text` is 300 for the question, and 55 for any answer.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "emoji": {
                "type": "Partial<Emoji>",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The emoji of the field",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "When creating a poll answer with an emoji, one only needs to send either the `id` (custom emoji) or `name` (default emoji) as the only field.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            }
        }
    },
    {
        "name": "PollAnswer",
        "documentation": [],
        "members": {
            "answerId": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The id of the answer",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "remarks",
                        "text": [
                            {
                                "text": "This id labels each answer. It starts at 1 and goes up sequentially. Discord recommend against depending on this sequence as it is an implementation detail.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "pollMedia": {
                "type": "PollMedia",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The data of the answer",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "PollResult",
        "documentation": [],
        "members": {
            "isFinalized": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the votes have been precisely counted",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "answerCounts": {
                "type": "PollAnswerCount[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The counts for each answer",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "PollAnswerCount",
        "documentation": [],
        "members": {
            "id": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The ",
                        "kind": "text"
                    },
                    {
                        "text": "{@link ",
                        "kind": "link"
                    },
                    {
                        "text": "PollAnswer.answerId",
                        "kind": "linkName",
                        "target": {
                            "fileName": "packages/bot/src/transformers/types.ts",
                            "textSpan": {
                                "start": 44117,
                                "length": 16
                            }
                        }
                    },
                    {
                        "text": "answerId",
                        "kind": "linkText"
                    },
                    {
                        "text": "}",
                        "kind": "link"
                    }
                ],
                "jsDoc": []
            },
            "count": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The number of votes for this answer",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "meVoted": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the current user voted for this answer",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "PresenceUpdate",
        "documentation": [],
        "members": {
            "desktop": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "mobile": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "web": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "user": {
                "type": "User",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "status": {
                "type": "PresenceStatus",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "activities": {
                "type": "Activity[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Role",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Role id",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The guild id where this role is located.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "toggles": {
                "type": "RoleToggles",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The compressed version of the boolean values on this role.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "hoist": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "If this role is showed separately in the user listing",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "permissions": {
                "type": "Permissions",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Permission bit set",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "managed": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this role is managed by an integration",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "mentionable": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this role is mentionable",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "internalTags": {
                "type": "{ botId?: bigint; integrationId?: bigint; subscriptionListingId?: bigint; }",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Use role.tags",
                        "kind": "text"
                    }
                ],
                "jsDoc": [
                    {
                        "name": "deprecated",
                        "text": [
                            {
                                "text": "this is not deprecated, but this is here to prevent users from using this as this is an internal value open to breaking changes.",
                                "kind": "text"
                            }
                        ]
                    }
                ]
            },
            "icon": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the role emoji hash",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Role name",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "color": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Integer representation of hexadecimal color code",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "position": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Position of this role",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "unicodeEmoji": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "role unicode emoji",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "flags": {
                "type": "RoleFlags",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Role flags combined as a bitfield",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "tags": {
                "type": "RoleTags",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The tags this role has",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "premiumSubscriber": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "availableForPurchase": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this role is available for purchase.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildConnections": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether this is a guild's linked role.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "RoleTags",
        "documentation": [],
        "members": {
            "botId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The id of the bot this role belongs to",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "integrationId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The id of the integration this role belongs to",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "subscriptionListingId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Id of this role's subscription sku and listing.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "availableForPurchase": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether this role is available for purchase.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildConnections": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether this is a guild's linked role",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "premiumSubscriber": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether this is the guild's premium subscriber role",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ScheduledEvent",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "the id of the scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "the guild id which the scheduled event belongs to",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the channel id in which the scheduled event will be hosted if specified",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "creatorId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the id of the user that created the scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "the name of the scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the description of the scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "scheduledStartTime": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "the time the scheduled event will start",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "scheduledEndTime": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the time the scheduled event will end if it does end.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "privacyLevel": {
                "type": "ScheduledEventPrivacyLevel",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "the privacy level of the scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "status": {
                "type": "ScheduledEventStatus",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "the status of the scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "entityType": {
                "type": "ScheduledEventEntityType",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "the type of hosting entity associated with a scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "entityId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "any additional id of the hosting entity associated with event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "location": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the location for the scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "creator": {
                "type": "User",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the user that created the scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "userCount": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the number of users subscribed to the scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "image": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the cover image hash of the scheduled event",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Sku",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "ID of SKU",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "type": {
                "type": "DiscordSkuType",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Type of SKU",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "applicationId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "ID of the parent application",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Customer-facing name of your premium offering",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "slug": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "System-generated URL slug based on the SKU's name",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "flags": {
                "type": "DiscordSkuFlag",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "SKU flags combined as a bitfield",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "StageInstance",
        "documentation": [],
        "members": {
            "topic": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The topic of the Stage instance (1-120 characters)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The id of this Stage instance",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The guild id of the associated Stage channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channelId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The id of the associated Stage channel",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildScheduledEventId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The id of the scheduled event for this Stage instance",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "InviteStageInstance",
        "documentation": [],
        "members": {
            "members": {
                "type": "Partial<Member>[]",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The members speaking in the Stage",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "participantCount": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The number of users in the Stage",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "speakerCount": {
                "type": "number",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The number of users speaking in the Stage",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "topic": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The topic of the Stage instance (1-120 characters)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Sticker",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "[Id of the sticker](https://discord.com/developers/docs/reference#image-formatting)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "packId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Id of the pack the sticker is from",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Name of the sticker",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Description of the sticker",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "tags": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "a unicode emoji representing the sticker's expression",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "type": {
                "type": "StickerTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "[type of sticker](https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-types)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "formatType": {
                "type": "StickerFormatTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "[Type of sticker format](https://discord.com/developers/docs/resources/sticker#sticker-object-sticker-format-types)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "available": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Whether or not the sticker is available",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Id of the guild that owns this sticker",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "user": {
                "type": "User",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The user that uploaded the sticker",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "sortValue": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "A sticker's sort order within a pack",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "StickerPack",
        "documentation": [],
        "members": {
            "coverStickerId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "bannerAssetId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "stickers": {
                "type": "Sticker[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "skuId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Team",
        "documentation": [],
        "members": {
            "icon": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "ownerUserId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "members": {
                "type": "TeamMember[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "TeamMember",
        "documentation": [],
        "members": {
            "membershipState": {
                "type": "TeamMembershipStates",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "teamId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "user": {
                "type": "User",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "role": {
                "type": "DiscordTeamMemberRole",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Template",
        "documentation": [],
        "members": {
            "description": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "isDirty": {
                "type": "boolean",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "creatorId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "createdAt": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "code": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "usageCount": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "creator": {
                "type": "User",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "updatedAt": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "sourceGuildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "serializedSourceGuild": {
                "type": "NonNullable<Omit<PickPartial<DiscordGuild, \"name\" | \"description\" | \"verification_level\" | \"default_message_notifications\" | \"explicit_content_filter\" | \"preferred_locale\" | \"afk_timeout\" | \"afk_channel_id\" | \"system_channel_id\" | \"channels\" | \"system_channel_flags\">, \"roles\"> & { roles: (Omit<PickPartial<DiscordRole, \"name\" | \"permissions\" | \"color\" | \"hoist\" | \"mentionable\" | \"icon\" | \"unicode_emoji\">, \"id\"> & { id: number; })[]; }>",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ThreadMember",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "userId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "flags": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "joinTimestamp": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "ThreadMemberGuildCreate",
        "documentation": [],
        "members": {
            "joinTimestamp": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "User",
        "documentation": [],
        "members": {
            "toggles": {
                "type": "UserToggles",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "Compressed version of all the booleans on a user.",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "username": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The user's username, not unique across the platform",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "globalName": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The user's display name, if it is set. For bots, this is the application name",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "locale": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The user's chosen language option",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "flags": {
                "type": "ToggleBitfield",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The flags on a user's account",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "premiumType": {
                "type": "PremiumTypes",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The type of Nitro subscription on a user's account",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "publicFlags": {
                "type": "ToggleBitfield",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The public flags on a user's account",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "accentColor": {
                "type": "number",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the user's banner color encoded as an integer representation of hexadecimal color code",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The user's id",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "discriminator": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The user's discord-tag",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "avatar": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The user's avatar hash",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "email": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The user's email",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "banner": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "the user's banner, or null if unset",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "avatarDecorationData": {
                "type": "AvatarDecorationData",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "data for the user's avatar decoration",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "tag": {
                "type": "string",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The user tag in the form of username#discriminator",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "bot": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the user belongs to an OAuth2 application",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "system": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the user is an Official Discord System user (part of the urgent message system)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "mfaEnabled": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the user has two factor enabled on their account",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "verified": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "Whether the email on this account has been verified",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "VoiceRegion",
        "documentation": [],
        "members": {
            "id": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "custom": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "optimal": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "deprecated": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "VoiceState",
        "documentation": [],
        "members": {
            "requestToSpeakTimestamp": {
                "type": "number",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "channelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "toggles": {
                "type": "VoiceStateToggles",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "sessionId": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "userId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "Webhook",
        "documentation": [],
        "members": {
            "type": {
                "type": "WebhookTypes",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The type of the webhook",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "token": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The secure token of the webhook (returned for Incoming Webhooks)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "url": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The url used for executing the webhook (returned by the webhooks OAuth2 flow)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [
                    {
                        "text": "The id of the webhook",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "guildId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The guild id this webhook is for",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "channelId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The channel id this webhook is for",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "user": {
                "type": "User",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The user this webhook was created by (not returned when getting a webhook with its token)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The default name of the webhook",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "avatar": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The default user avatar hash of the webhook",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "applicationId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The bot/OAuth2 application that created this webhook",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "sourceGuild": {
                "type": "Partial<Guild>",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The guild of the channel that this webhook is following (returned for Channel Follower Webhooks)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            },
            "sourceChannel": {
                "type": "Partial<Channel>",
                "isOptional": true,
                "documentation": [
                    {
                        "text": "The channel that this webhook is following (returned for Channel Follower Webhooks)",
                        "kind": "text"
                    }
                ],
                "jsDoc": []
            }
        }
    },
    {
        "name": "WelcomeScreen",
        "documentation": [],
        "members": {
            "description": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "welcomeChannels": {
                "type": "WelcomeScreenChannel[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "WelcomeScreenChannel",
        "documentation": [],
        "members": {
            "channelId": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "description": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "emojiId": {
                "type": "bigint",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "emojiName": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "GuildWidget",
        "documentation": [],
        "members": {
            "id": {
                "type": "bigint",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "name": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "members": {
                "type": "Partial<User>[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "channels": {
                "type": "Partial<Channel>[]",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "instant_invite": {
                "type": "string",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            },
            "presenceCount": {
                "type": "number",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    },
    {
        "name": "GuildWidgetSettings",
        "documentation": [],
        "members": {
            "channelId": {
                "type": "string",
                "isOptional": true,
                "documentation": [],
                "jsDoc": []
            },
            "enabled": {
                "type": "boolean",
                "isOptional": false,
                "documentation": [],
                "jsDoc": []
            }
        }
    }
]